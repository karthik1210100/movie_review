<div class="container py-5">

  <div class="card border-0 shadow-lg mb-5 p-4">
    <div class="text-center mb-4">
      <% if @movie.avatar.present? %>
        <%= image_tag(@movie.avatar, size: "250x250", class: "rounded-circle shadow-sm") %>
      <% else %>
        <%= image_tag("https://via.placeholder.com/250?text=No+Image", class: "rounded-circle shadow-sm") %>
      <% end %>
    </div>
    <div class="text-center">
      <%= render @movie %>
    </div>

    <!-- Trailer video content -->
    <% if @movie.trailer_url.present? %>
      <div class="d-flex justify-content-center mt-4">
        <iframe
          width="560"
          height="315"
          src="<%= @movie.trailer_url %>"
          frameborder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          allowfullscreen>
        </iframe>
      </div>
    <% else %>
      <div class="text-danger text-center">‚ö†Ô∏è Invalid trailer URL format.</div>
    <% end %>
  </div>

  <!-- Rating Form Card -->
  <div class="card mb-5 shadow-sm border-0 rounded-4" style="background: linear-gradient(135deg, #f8f9fa, #e9ecef);">
    <div class="card-body text-center">
      <h4 class="text-primary fw-semibold mb-4">‚≠ê Rate This Movie</h4>
      <%= form_with(url: movie_rating_movie_path(@movie), method: :post, html: { id: "rating-form" }) do |f| %>
        <div class="star-rating d-flex justify-content-center gap-3 mb-4" id="star-container">
          <% 1.upto(5) do |i| %>
            <i class="bi bi-star fs-1" data-value="<%= i %>" style="cursor: pointer; color: #adb5bd;"></i>
          <% end %>
        </div>
        <%= hidden_field_tag "movie[rating]", "", id: "rating-value" %>
        <%= f.submit "Submit Rating", class: "btn btn-lg btn-primary rounded-pill px-5" %>
      <% end %>
    </div>
  </div>

  <!-- Rating Breakdown Grid -->
  <div class="mb-5">
    <h5 class="text-secondary fw-semibold mb-4 text-center">üìä Rating Breakdown</h5>
    <div class="d-flex justify-content-center gap-4 flex-wrap">
      <% 5.downto(1) do |j| %>
        <div class="text-center p-3 shadow-sm rounded-3 bg-white" style="min-width: 100px;">
          <div>
            <% j.times do %>
              <span class="text-warning fs-4">&#9733;</span>
            <% end %>
          </div>
          <div class="small text-muted mt-2">
            <%= Movie.find(@movie.id).movie_ratings.group(:rating).count[j] || 0 %> votes
          </div>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Review Form Section -->
  <div class="card shadow-sm rounded-4 border-0 p-4 mb-5" style="background: #fefefe;">
    <h4 class="text-secondary fw-semibold mb-4">üìù Add a Review</h4>
    <%= render 'reviews/form', review: @movie.reviews.build %>
  </div>

  <!-- Reviews Table with card styling -->
  <% if @movie.reviews.select(&:persisted?).any? %>
    <div class="card rounded-4 shadow-sm p-4 mb-5 bg-white border-0">
      <h5 class="mb-4 text-secondary text-center">üí¨ User Reviews</h5>
      <div class="table-responsive">
        <table class="table align-middle">
          <thead class="card-header bg-primary text-white fw-semibold">
          <tr>
            <th>Review</th>
            <th class="text-center" colspan="3">Actions</th>
          </tr>
          </thead>
          <tbody>
          <% @movie.reviews.includes(:user).each do |review| %>
            <% next unless review.about %>
            <tr>
              <td>
                <p class="mb-1 fw-semibold"><%= review.about %></p>
                <small class="text-muted">
                  By: <%= review.user&.email || 'User Suspended' %> &bull;
                  Comments: <%= review.user_review_comments.count %>
                </small>
              </td>
              <td class="text-center">
                <%= link_to "üí¨ Comments", movie_review_path(@movie, review), class: 'btn btn-outline-info btn-sm px-3' %>
              </td>
              <% if can? :edit, review %>
                <td class="text-center">
                  <%= link_to "‚úèÔ∏è Edit", edit_movie_review_path(@movie, review), class: 'btn btn-outline-warning btn-sm px-3' %>
                </td>
                <td class="text-center">
                  <%= button_to "üóëÔ∏è Delete", movie_review_path(@movie, review), method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-outline-danger btn-sm px-3' %>
                </td>
              <% end %>
            </tr>
          <% end %>
          </tbody>
        </table>
      </div>
    </div>
  <% end %>

  <!-- Action Buttons -->
  <div class="d-flex justify-content-center gap-3 mb-5">
    <% if can? :edit, @movie %>
      <%= link_to "‚úèÔ∏è Edit Movie", edit_movie_path(@movie), class: 'btn btn-outline-primary px-4 rounded-pill' %>
      <%= button_to "üóëÔ∏è Delete Movie", @movie, method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-outline-danger px-4 rounded-pill' %>
    <% end %>
    <%= link_to "‚¨ÖÔ∏è Back to Movies", movies_path, class: 'btn btn-outline-secondary px-4 rounded-pill' %>
  </div>

</div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        const stars = document.querySelectorAll("#star-container i");
        const ratingInput = document.getElementById("rating-value");

        let selectedRating = 0;

        stars.forEach(star => {
            star.addEventListener("mouseover", function () {
                const value = parseInt(this.getAttribute("data-value"));
                highlightStars(value);
            });

            star.addEventListener("mouseout", function () {
                highlightStars(selectedRating);
            });

            star.addEventListener("click", function () {
                const value = parseInt(this.getAttribute("data-value"));

                if (selectedRating === value) {
                    selectedRating = 0;
                    ratingInput.value = "";
                } else {
                    selectedRating = value;
                    ratingInput.value = value;
                }

                highlightStars(selectedRating);
            });
        });

        function highlightStars(count) {
            stars.forEach(star => {
                const starValue = parseInt(star.getAttribute("data-value"));
                if (starValue <= count) {
                    star.classList.remove("bi-star");
                    star.classList.add("bi-star-fill");
                    star.style.color = "#ffc107";
                } else {
                    star.classList.remove("bi-star-fill");
                    star.classList.add("bi-star");
                    star.style.color = "#ccc";
                }
            });
        }
    });

</script>

<style>
    .card {
        border-radius: 12px;
        background: #fff;
        transition: box-shadow 0.3s ease;
    }

    .card:hover {
        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.1);
    }

    .star-rating {
        font-size: 24px;
        color: #ffc107;
    }

    .star-rating i:hover,
    .star-rating i.active {
        color: #ffc107 !important;
        transition: color 0.2s ease-in-out;
    }

    .rounded-circle {
        border: 3px solid #dee2e6;
    }

    .table th,
    .table td {
        vertical-align: middle !important;
    }

    .star-rating i {
        transition: color 0.2s ease-in-out, transform 0.2s ease-in-out;
        margin-right: 5px;
    }

</style>